name: build

on:
  push:
    branches: [develop, main]
  pull_request:
    branches: [develop, main]

jobs:
  build:
    runs-on: ubuntu-latest
    environment: AUTH
    strategy:
      matrix:
        python-version: ["3.7.15", "3.8", "3.9", "3.10"]
      fail-fast: false

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4.5.0
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install poetry
        run: make poetry-download

      - name: Set up cache
        uses: actions/cache@v3.3.1
        with:
          path: .venv
          key: venv-${{ matrix.python-version }}-${{ hashFiles('pyproject.toml') }}-${{ hashFiles('poetry.lock') }}
      - name: Install dependencies
        run: |
          poetry config virtualenvs.in-project true
          poetry install

      - name: Run style checks
        run: |
          make check-codestyle

      - name: Run tests
        env:
          AUTH: "foobar"
        run: |
          make test-ci
