# Poetry pyproject.toml: https://python-poetry.org/docs/pyproject/
[build-system]
requires = ["poetry_core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "farcaster"
version = "0.7.6"
description = "farcaster-py is a Python SDK for the Farcaster Protocol"
readme = "README.md"
authors = ["Andreessen Horowitz <crypto-engineering@a16z.com>"]
license = "MIT"
repository = "https://github.com/a16z/farcaster-py"
homepage = "https://github.com/a16z/farcaster-py"

# Keywords description https://python-poetry.org/docs/pyproject/#keywords
keywords = []  #! Update me

# Pypi classifiers: https://pypi.org/classifiers/
classifiers = [  #! Update me
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Developers",
  "Operating System :: OS Independent",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.7",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
]

[tool.poetry.dependencies]
python = ">3.7.1,<3.11"
importlib_metadata = {version = "^4.5.0", python = "<3.8"}
python-dotenv = "^0.21.0"
pydantic = "^1.9.2"
pyhumps = "^3.7.2"
requests = "^2.28.1"
canonicaljson = ">=1.6.4,<3.0.0"
eth-account = "^0.8.0"
parsimonious = ">=0.8.1,<0.10.0"

[tool.poetry.group.dev.dependencies]
bandit = "^1.7.1"
black = "^23.1.0"
darglint = "^1.8.1"
isort = {extras = ["colors"], version = "^5.11.5"}
mypy = "^1.0"
mypy-extensions = "^1.0.0"
pre-commit = "^2.15.0"
pydocstyle = "^6.3.0"
pylint = "^2.11.1"
pytest = "^7.2.1"
pyupgrade = "^3.3.1"
safety = "^2.1.1"
coverage = "^7.2.1"
coverage-badge = "^1.1.0"
pytest-dependency = "^0.5.1"
pytest-html = "^3.1.1"
pytest-cov = "^4.0.0"
pytest-recording = "^0.12.1"
docconvert = "^2.0.0"
mkdocs = "^1.4.2"
mkdocs-material = "^9.0.5"
mkdocstrings = ">=0.19.1,<0.21.0"
mkdocstrings-python = "^0.8.3"
pillow = "^9.4.0"
cairosvg = "^2.6.0"

[tool.black]
# https://github.com/psf/black
target-version = ["py310"]
line-length = 88
color = true

exclude = '''
/(
    \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
    | env
    | venv
)/
'''

[tool.isort]
# https://github.com/timothycrosley/isort/
py_version = 310
line_length = 88

known_typing = ["typing", "types", "typing_extensions", "mypy", "mypy_extensions"]
sections = ["FUTURE", "TYPING", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]
include_trailing_comma = true
profile = "black"
multi_line_output = 3
indent = 4
color_output = true

[tool.mypy]
# https://mypy.readthedocs.io/en/latest/config_file.html#using-a-pyproject-toml-file
pretty = true
show_traceback = true
color_output = true

allow_redefinition = false
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
ignore_missing_imports = true
implicit_reexport = true
no_implicit_optional = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
strict_equality = true
strict_optional = true
warn_no_return = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true

[tool.pytest.ini_options]
# https://docs.pytest.org/en/6.2.x/customize.html#pyproject-toml
# Directories that are not visited by pytest collector:
norecursedirs =["hooks", "*.egg", ".eggs", "dist", "build", "docs", ".tox", ".git", "__pycache__"]
doctest_optionflags = ["NUMBER", "NORMALIZE_WHITESPACE", "IGNORE_EXCEPTION_DETAIL"]
filterwarnings = [
    "ignore::DeprecationWarning",
  ]
log_cli = true
log_cli_level = 30
# Extra options:
addopts = [
  "--strict-markers",
  "--tb=short",
  "--doctest-modules",
  "--doctest-continue-on-failure",
]

[tool.coverage.run]
source = ["tests"]

[coverage.paths]
source = "farcaster"

[coverage.run]
branch = true

[coverage.report]
fail_under = 50
show_missing = true
